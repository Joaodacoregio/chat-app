@inject NavigationManager navigation
@inject AuthenticationStateProvider authStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <p>Verificando autorização...</p>
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Desculpe, não há nada neste endereço.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected override async Task OnInitializedAsync()
    {
        // Verifica a autenticação assim que a página for carregada
        var authState = await authStateProvider.GetAuthenticationStateAsync();

        // Se o usuário não estiver autenticado, redireciona para o login automaticamente
        if (authState?.User?.Identity == null || !authState.User.Identity.IsAuthenticated)
        {
            navigation.NavigateTo("/login");  // O 'true' força o recarregamento da página
        }
    }
}
